!!! 5
- require 'json'
%html
  %head
    = Haml::Engine.new(File.read('_header.haml')).render(Object.new, :title => 'Mathias Soeken / Reversible circuit classification')
  %body
    .container#main-container
      .row#main-row
        = Haml::Engine.new(File.read('_nav.haml')).render(Object.new, :page => "cirkit")
        .col-md-9
          %h1 Reversible Circuit Classification
          %p
            This page lists the benchmarks for the reversible reciprocal circuits reported in
          %p
            Mathias Soeken, Nabila Abdessaied, and Giovanni De Micheli:
            %a(href="publications.html#c68") Enumeration of reversible functions and its application to circuit complexity,
            %i Conference on Reversible Computation,
            2016, 255&ndash;270.
          .row
            .col-md-4
              %h3 2-variable functions
              %ul.nav.nav-tabs
                %li
                  %a(href="#npnp2") NPNP
                %li
                  %a(href="#ll2") LL
                %li
                  %a(href="#aa2") AA
              = Haml::Engine.new(File.read('_revclass_class.haml')).render(Object.new, :title => 'NPNP-equivalence', :vars => 2, :cls => "npnp")
              = Haml::Engine.new(File.read('_revclass_class.haml')).render(Object.new, :title => 'LL-equivalence', :vars => 2, :cls => "ll")
              = Haml::Engine.new(File.read('_revclass_class.haml')).render(Object.new, :title => 'AA-equivalence', :vars => 2, :cls => "aa")
            .col-md-1
            .col-md-4
              %h3 3-variable functions
              %ul.nav.nav-tabs
                %li
                  %a(href="#npnp3") NPNP
                %li
                  %a(href="#ll3") LL
                %li
                  %a(href="#aa3") AA
              = Haml::Engine.new(File.read('_revclass_class.haml')).render(Object.new, :title => 'NPNP-equivalence', :vars => 3, :cls => "npnp")
              = Haml::Engine.new(File.read('_revclass_class.haml')).render(Object.new, :title => 'LL-equivalence', :vars => 3, :cls => "ll")
              = Haml::Engine.new(File.read('_revclass_class.haml')).render(Object.new, :title => 'AA-equivalence', :vars => 3, :cls => "aa")
